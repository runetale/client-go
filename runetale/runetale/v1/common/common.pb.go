// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.3
// source: runetale/runetale/v1/common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeploymentMethod int32

const (
	DeploymentMethod_DOCKER DeploymentMethod = 0
	DeploymentMethod_CLI    DeploymentMethod = 1
	DeploymentMethod_LINUX  DeploymentMethod = 2
	DeploymentMethod_GCP    DeploymentMethod = 3
	DeploymentMethod_MANUAL DeploymentMethod = 4
)

// Enum value maps for DeploymentMethod.
var (
	DeploymentMethod_name = map[int32]string{
		0: "DOCKER",
		1: "CLI",
		2: "LINUX",
		3: "GCP",
		4: "MANUAL",
	}
	DeploymentMethod_value = map[string]int32{
		"DOCKER": 0,
		"CLI":    1,
		"LINUX":  2,
		"GCP":    3,
		"MANUAL": 4,
	}
)

func (x DeploymentMethod) Enum() *DeploymentMethod {
	p := new(DeploymentMethod)
	*p = x
	return p
}

func (x DeploymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_runetale_runetale_v1_common_proto_enumTypes[0].Descriptor()
}

func (DeploymentMethod) Type() protoreflect.EnumType {
	return &file_runetale_runetale_v1_common_proto_enumTypes[0]
}

func (x DeploymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentMethod.Descriptor instead.
func (DeploymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_common_proto_rawDescGZIP(), []int{0}
}

type Fleet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc      string      `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Proto     string      `protobuf:"bytes,4,opt,name=proto,proto3" json:"proto,omitempty"`
	Port      string      `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
	Domain    string      `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain,omitempty"` // created by domain
	Age       string      `protobuf:"bytes,7,opt,name=age,proto3" json:"age,omitempty"`
	Resources []*Resource `protobuf:"bytes,8,rep,name=resources,proto3" json:"resources,omitempty"`
	Users     []*User     `protobuf:"bytes,9,rep,name=users,proto3" json:"users,omitempty"`
	Groups    []*Group    `protobuf:"bytes,10,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Fleet) Reset() {
	*x = Fleet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fleet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fleet) ProtoMessage() {}

func (x *Fleet) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fleet.ProtoReflect.Descriptor instead.
func (*Fleet) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *Fleet) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Fleet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Fleet) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Fleet) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *Fleet) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Fleet) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Fleet) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *Fleet) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Fleet) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Fleet) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ip        string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Os        string   `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
	Status    bool     `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedBy string   `protobuf:"bytes,6,opt,name=createdBy,proto3" json:"createdBy,omitempty"` // if made with token, managedBy is returned.
	Fleets    []*Fleet `protobuf:"bytes,7,rep,name=fleets,proto3" json:"fleets,omitempty"`
	Users     []*User  `protobuf:"bytes,8,rep,name=users,proto3" json:"users,omitempty"`
	Groups    []*Group `protobuf:"bytes,9,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *Resource) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Resource) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Resource) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Resource) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Resource) GetFleets() []*Fleet {
	if x != nil {
		return x.Fleets
	}
	return nil
}

func (x *Resource) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Resource) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 参照できるようにする
	Users     []*User     `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	Fleets    []*Fleet    `protobuf:"bytes,4,rep,name=fleets,proto3" json:"fleets,omitempty"`
	Resources []*Resource `protobuf:"bytes,5,rep,name=resources,proto3" json:"resources,omitempty"`
	Age       string      `protobuf:"bytes,6,opt,name=age,proto3" json:"age,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *Group) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Group) GetFleets() []*Fleet {
	if x != nil {
		return x.Fleets
	}
	return nil
}

func (x *Group) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Group) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Picture   string      `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty"`
	Email     string      `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Role      string      `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	Joined    string      `protobuf:"bytes,6,opt,name=joined,proto3" json:"joined,omitempty"`
	LastSeen  string      `protobuf:"bytes,7,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"`
	Fleets    []*Fleet    `protobuf:"bytes,8,rep,name=fleets,proto3" json:"fleets,omitempty"`
	Resources []*Resource `protobuf:"bytes,9,rep,name=resources,proto3" json:"resources,omitempty"`
	Devices   []*Device   `protobuf:"bytes,10,rep,name=devices,proto3" json:"devices,omitempty"`
	Groups    []*Group    `protobuf:"bytes,11,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *User) GetJoined() string {
	if x != nil {
		return x.Joined
	}
	return ""
}

func (x *User) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

func (x *User) GetFleets() []*Fleet {
	if x != nil {
		return x.Fleets
	}
	return nil
}

func (x *User) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *User) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *User) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email     string      `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Ip        string      `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Os        string      `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	Status    bool        `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	LastSeen  string      `protobuf:"bytes,7,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"` // only when status false
	CreatedBy string      `protobuf:"bytes,8,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	Version   string      `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	NodeKey   string      `protobuf:"bytes,10,opt,name=nodeKey,proto3" json:"nodeKey,omitempty"`
	CreatedAt string      `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	KeyExpiry string      `protobuf:"bytes,12,opt,name=keyExpiry,proto3" json:"keyExpiry,omitempty"`
	Fleets    []*Fleet    `protobuf:"bytes,13,rep,name=fleets,proto3" json:"fleets,omitempty"`
	Resources []*Resource `protobuf:"bytes,14,rep,name=resources,proto3" json:"resources,omitempty"`
	Groups    []*Group    `protobuf:"bytes,15,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_common_proto_rawDescGZIP(), []int{4}
}

func (x *Device) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Device) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Device) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Device) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Device) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

func (x *Device) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Device) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Device) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *Device) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Device) GetKeyExpiry() string {
	if x != nil {
		return x.KeyExpiry
	}
	return ""
}

func (x *Device) GetFleets() []*Fleet {
	if x != nil {
		return x.Fleets
	}
	return nil
}

func (x *Device) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Device) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

var File_runetale_runetale_v1_common_proto protoreflect.FileDescriptor

var file_runetale_runetale_v1_common_proto_rawDesc = []byte{
	0x0a, 0x21, 0x72, 0x75, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x65, 0x2f, 0x72, 0x75, 0x6e, 0x65, 0x74,
	0x61, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x8e, 0x02, 0x0a, 0x05,
	0x46, 0x6c, 0x65, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xf6, 0x01, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x6c, 0x65,
	0x65, 0x74, 0x52, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x25,
	0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x52, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12, 0x2e,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x22, 0xca, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46,
	0x6c, 0x65, 0x65, 0x74, 0x52, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x07,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xa2, 0x03,
	0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x6c,
	0x65, 0x65, 0x74, 0x52, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2a, 0x47, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4c, 0x49, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4c,
	0x49, 0x4e, 0x55, 0x58, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x43, 0x50, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x04, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_runetale_runetale_v1_common_proto_rawDescOnce sync.Once
	file_runetale_runetale_v1_common_proto_rawDescData = file_runetale_runetale_v1_common_proto_rawDesc
)

func file_runetale_runetale_v1_common_proto_rawDescGZIP() []byte {
	file_runetale_runetale_v1_common_proto_rawDescOnce.Do(func() {
		file_runetale_runetale_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_runetale_runetale_v1_common_proto_rawDescData)
	})
	return file_runetale_runetale_v1_common_proto_rawDescData
}

var file_runetale_runetale_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_runetale_runetale_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_runetale_runetale_v1_common_proto_goTypes = []interface{}{
	(DeploymentMethod)(0), // 0: protos.DeploymentMethod
	(*Fleet)(nil),         // 1: protos.Fleet
	(*Resource)(nil),      // 2: protos.Resource
	(*Group)(nil),         // 3: protos.Group
	(*User)(nil),          // 4: protos.User
	(*Device)(nil),        // 5: protos.Device
}
var file_runetale_runetale_v1_common_proto_depIdxs = []int32{
	2,  // 0: protos.Fleet.resources:type_name -> protos.Resource
	4,  // 1: protos.Fleet.users:type_name -> protos.User
	3,  // 2: protos.Fleet.groups:type_name -> protos.Group
	1,  // 3: protos.Resource.fleets:type_name -> protos.Fleet
	4,  // 4: protos.Resource.users:type_name -> protos.User
	3,  // 5: protos.Resource.groups:type_name -> protos.Group
	4,  // 6: protos.Group.users:type_name -> protos.User
	1,  // 7: protos.Group.fleets:type_name -> protos.Fleet
	2,  // 8: protos.Group.resources:type_name -> protos.Resource
	1,  // 9: protos.User.fleets:type_name -> protos.Fleet
	2,  // 10: protos.User.resources:type_name -> protos.Resource
	5,  // 11: protos.User.devices:type_name -> protos.Device
	3,  // 12: protos.User.groups:type_name -> protos.Group
	1,  // 13: protos.Device.fleets:type_name -> protos.Fleet
	2,  // 14: protos.Device.resources:type_name -> protos.Resource
	3,  // 15: protos.Device.groups:type_name -> protos.Group
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_runetale_runetale_v1_common_proto_init() }
func file_runetale_runetale_v1_common_proto_init() {
	if File_runetale_runetale_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_runetale_runetale_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fleet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_runetale_runetale_v1_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_runetale_runetale_v1_common_proto_goTypes,
		DependencyIndexes: file_runetale_runetale_v1_common_proto_depIdxs,
		EnumInfos:         file_runetale_runetale_v1_common_proto_enumTypes,
		MessageInfos:      file_runetale_runetale_v1_common_proto_msgTypes,
	}.Build()
	File_runetale_runetale_v1_common_proto = out.File
	file_runetale_runetale_v1_common_proto_rawDesc = nil
	file_runetale_runetale_v1_common_proto_goTypes = nil
	file_runetale_runetale_v1_common_proto_depIdxs = nil
}
