// dtos.proto
//
// This file defines the Protocol Buffers messages for REST API responses.
// These Data Transfer Objects (DTOs) are used for data exchange between
// the Go backend server and client applications implemented in TypeScript,
// Swift, and Kotlin.
//
// Key features:
// - Type-safe data exchange between backend and frontend
// - Centralized management of API response structures
// - Efficient data transfer through Protocol Buffers serialization/deserialization
//
// Usage:
// 1. Backend (Go): Use the generated Go structs to construct responses
// 2. Frontend (TypeScript, Swift, Kotlin): Use the generated type definitions to handle responses
//
// Important notes:
// - This file only defines API response structures, not request structures
// - Each message type corresponds to a specific API endpoint response
// - Do not modify field numbers (for backward compatibility)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.3
// source: runetale/runetale/v1/dtos.proto

package dtos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum definitions
type OS int32

const (
	OS_OS_UNSPECIFIED OS = 0
	OS_OS_WINDOWS     OS = 1
	OS_OS_LINUX       OS = 2
	OS_OS_MACOS       OS = 3
	OS_OS_IOS         OS = 4
	OS_OS_ANDROID     OS = 5
	OS_OS_UNKNOWN     OS = 6
)

// Enum value maps for OS.
var (
	OS_name = map[int32]string{
		0: "OS_UNSPECIFIED",
		1: "OS_WINDOWS",
		2: "OS_LINUX",
		3: "OS_MACOS",
		4: "OS_IOS",
		5: "OS_ANDROID",
		6: "OS_UNKNOWN",
	}
	OS_value = map[string]int32{
		"OS_UNSPECIFIED": 0,
		"OS_WINDOWS":     1,
		"OS_LINUX":       2,
		"OS_MACOS":       3,
		"OS_IOS":         4,
		"OS_ANDROID":     5,
		"OS_UNKNOWN":     6,
	}
)

func (x OS) Enum() *OS {
	p := new(OS)
	*p = x
	return p
}

func (x OS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OS) Descriptor() protoreflect.EnumDescriptor {
	return file_runetale_runetale_v1_dtos_proto_enumTypes[0].Descriptor()
}

func (OS) Type() protoreflect.EnumType {
	return &file_runetale_runetale_v1_dtos_proto_enumTypes[0]
}

func (x OS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OS.Descriptor instead.
func (OS) EnumDescriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{0}
}

type Platform int32

const (
	Platform_PLATFORM_UNSPECIFIED Platform = 0
	Platform_PLATFORM_DOCKER      Platform = 1
	Platform_PLATFORM_CLI         Platform = 2
	Platform_PLATFORM_LINUX       Platform = 3
	Platform_PLATFORM_GCP         Platform = 4
	Platform_PLATFORM_MANUAL      Platform = 5
	Platform_PLATFORM_AWS         Platform = 6
	Platform_PLATFORM_AZURE       Platform = 7
	Platform_PLATFORM_ONPREM      Platform = 8
	Platform_PLATFORM_MACOS       Platform = 9
	Platform_PLATFORM_WINDOWS     Platform = 10
	Platform_PLATFORM_OTHER       Platform = 11
)

// Enum value maps for Platform.
var (
	Platform_name = map[int32]string{
		0:  "PLATFORM_UNSPECIFIED",
		1:  "PLATFORM_DOCKER",
		2:  "PLATFORM_CLI",
		3:  "PLATFORM_LINUX",
		4:  "PLATFORM_GCP",
		5:  "PLATFORM_MANUAL",
		6:  "PLATFORM_AWS",
		7:  "PLATFORM_AZURE",
		8:  "PLATFORM_ONPREM",
		9:  "PLATFORM_MACOS",
		10: "PLATFORM_WINDOWS",
		11: "PLATFORM_OTHER",
	}
	Platform_value = map[string]int32{
		"PLATFORM_UNSPECIFIED": 0,
		"PLATFORM_DOCKER":      1,
		"PLATFORM_CLI":         2,
		"PLATFORM_LINUX":       3,
		"PLATFORM_GCP":         4,
		"PLATFORM_MANUAL":      5,
		"PLATFORM_AWS":         6,
		"PLATFORM_AZURE":       7,
		"PLATFORM_ONPREM":      8,
		"PLATFORM_MACOS":       9,
		"PLATFORM_WINDOWS":     10,
		"PLATFORM_OTHER":       11,
	}
)

func (x Platform) Enum() *Platform {
	p := new(Platform)
	*p = x
	return p
}

func (x Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_runetale_runetale_v1_dtos_proto_enumTypes[1].Descriptor()
}

func (Platform) Type() protoreflect.EnumType {
	return &file_runetale_runetale_v1_dtos_proto_enumTypes[1]
}

func (x Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform.Descriptor instead.
func (Platform) EnumDescriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{1}
}

type IPProto int32

const (
	IPProto_IP_PROTO_UNSPECIFIED IPProto = 0
	IPProto_IP_PROTO_ALL         IPProto = 1
	IPProto_IP_PROTO_TCP         IPProto = 2
	IPProto_IP_PROTO_UDP         IPProto = 3
	IPProto_IP_PROTO_ICMPV4      IPProto = 4
	IPProto_IP_PROTO_ICMPV6      IPProto = 5
)

// Enum value maps for IPProto.
var (
	IPProto_name = map[int32]string{
		0: "IP_PROTO_UNSPECIFIED",
		1: "IP_PROTO_ALL",
		2: "IP_PROTO_TCP",
		3: "IP_PROTO_UDP",
		4: "IP_PROTO_ICMPV4",
		5: "IP_PROTO_ICMPV6",
	}
	IPProto_value = map[string]int32{
		"IP_PROTO_UNSPECIFIED": 0,
		"IP_PROTO_ALL":         1,
		"IP_PROTO_TCP":         2,
		"IP_PROTO_UDP":         3,
		"IP_PROTO_ICMPV4":      4,
		"IP_PROTO_ICMPV6":      5,
	}
)

func (x IPProto) Enum() *IPProto {
	p := new(IPProto)
	*p = x
	return p
}

func (x IPProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IPProto) Descriptor() protoreflect.EnumDescriptor {
	return file_runetale_runetale_v1_dtos_proto_enumTypes[2].Descriptor()
}

func (IPProto) Type() protoreflect.EnumType {
	return &file_runetale_runetale_v1_dtos_proto_enumTypes[2]
}

func (x IPProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IPProto.Descriptor instead.
func (IPProto) EnumDescriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{2}
}

type ExpirelyTime int32

const (
	ExpirelyTime_EXPIRELY_TIME_UNSPECIFIED ExpirelyTime = 0
	ExpirelyTime_EXPIRELY_TIME_ONE_MONTH   ExpirelyTime = 1
	ExpirelyTime_EXPIRELY_TIME_TWO_MONTH   ExpirelyTime = 2
	ExpirelyTime_EXPIRELY_TIME_THREE_MONTH ExpirelyTime = 3
)

// Enum value maps for ExpirelyTime.
var (
	ExpirelyTime_name = map[int32]string{
		0: "EXPIRELY_TIME_UNSPECIFIED",
		1: "EXPIRELY_TIME_ONE_MONTH",
		2: "EXPIRELY_TIME_TWO_MONTH",
		3: "EXPIRELY_TIME_THREE_MONTH",
	}
	ExpirelyTime_value = map[string]int32{
		"EXPIRELY_TIME_UNSPECIFIED": 0,
		"EXPIRELY_TIME_ONE_MONTH":   1,
		"EXPIRELY_TIME_TWO_MONTH":   2,
		"EXPIRELY_TIME_THREE_MONTH": 3,
	}
)

func (x ExpirelyTime) Enum() *ExpirelyTime {
	p := new(ExpirelyTime)
	*p = x
	return p
}

func (x ExpirelyTime) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExpirelyTime) Descriptor() protoreflect.EnumDescriptor {
	return file_runetale_runetale_v1_dtos_proto_enumTypes[3].Descriptor()
}

func (ExpirelyTime) Type() protoreflect.EnumType {
	return &file_runetale_runetale_v1_dtos_proto_enumTypes[3]
}

func (x ExpirelyTime) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExpirelyTime.Descriptor instead.
func (ExpirelyTime) EnumDescriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{3}
}

type UserRoles int32

const (
	UserRoles_USER_ROLE_UNSPECIFIED UserRoles = 0
	UserRoles_USER_ROLE_ADMIN       UserRoles = 1
	UserRoles_USER_ROLE_USER        UserRoles = 2
)

// Enum value maps for UserRoles.
var (
	UserRoles_name = map[int32]string{
		0: "USER_ROLE_UNSPECIFIED",
		1: "USER_ROLE_ADMIN",
		2: "USER_ROLE_USER",
	}
	UserRoles_value = map[string]int32{
		"USER_ROLE_UNSPECIFIED": 0,
		"USER_ROLE_ADMIN":       1,
		"USER_ROLE_USER":        2,
	}
)

func (x UserRoles) Enum() *UserRoles {
	p := new(UserRoles)
	*p = x
	return p
}

func (x UserRoles) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRoles) Descriptor() protoreflect.EnumDescriptor {
	return file_runetale_runetale_v1_dtos_proto_enumTypes[4].Descriptor()
}

func (UserRoles) Type() protoreflect.EnumType {
	return &file_runetale_runetale_v1_dtos_proto_enumTypes[4]
}

func (x UserRoles) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRoles.Descriptor instead.
func (UserRoles) EnumDescriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{4}
}

// Common type definitions
type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos   int32 `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{0}
}

func (x *Timestamp) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Timestamp) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type LogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{1}
}

func (x *LogoutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type OkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *OkResponse) Reset() {
	*x = OkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OkResponse) ProtoMessage() {}

func (x *OkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OkResponse.ProtoReflect.Descriptor instead.
func (*OkResponse) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{2}
}

func (x *OkResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type VerifyLoginSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *VerifyLoginSessionRequest) Reset() {
	*x = VerifyLoginSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyLoginSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyLoginSessionRequest) ProtoMessage() {}

func (x *VerifyLoginSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyLoginSessionRequest.ProtoReflect.Descriptor instead.
func (*VerifyLoginSessionRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyLoginSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type VerifyLoginSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *VerifyLoginSessionResponse) Reset() {
	*x = VerifyLoginSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyLoginSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyLoginSessionResponse) ProtoMessage() {}

func (x *VerifyLoginSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyLoginSessionResponse.ProtoReflect.Descriptor instead.
func (*VerifyLoginSessionResponse) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyLoginSessionResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

// User-related message definitions
type UserRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role        string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UserRole) Reset() {
	*x = UserRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRole) ProtoMessage() {}

func (x *UserRole) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRole.ProtoReflect.Descriptor instead.
func (*UserRole) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{5}
}

func (x *UserRole) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UserRole) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type BaseUserNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ip        string     `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	PublicKey string     `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Os        string     `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	Version   string     `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	IsOnline  bool       `protobuf:"varint,7,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	LastSeen  *Timestamp `protobuf:"bytes,8,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
}

func (x *BaseUserNode) Reset() {
	*x = BaseUserNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseUserNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseUserNode) ProtoMessage() {}

func (x *BaseUserNode) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseUserNode.ProtoReflect.Descriptor instead.
func (*BaseUserNode) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{6}
}

func (x *BaseUserNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseUserNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseUserNode) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *BaseUserNode) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *BaseUserNode) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *BaseUserNode) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BaseUserNode) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *BaseUserNode) GetLastSeen() *Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type BaseUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email     string          `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name      string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Role      *UserRole       `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Nodes     []*BaseUserNode `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	CreatedAt *Timestamp      `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *Timestamp      `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BaseUser) Reset() {
	*x = BaseUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseUser) ProtoMessage() {}

func (x *BaseUser) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseUser.ProtoReflect.Descriptor instead.
func (*BaseUser) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{7}
}

func (x *BaseUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BaseUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseUser) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *BaseUser) GetNodes() []*BaseUserNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *BaseUser) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BaseUser) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Device-related message definitions
type BaseDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PublicKey string     `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Ip        string     `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Os        string     `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	Version   string     `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	IsOnline  bool       `protobuf:"varint,7,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	LastSeen  *Timestamp `protobuf:"bytes,8,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	CreatedAt *Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BaseDevice) Reset() {
	*x = BaseDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseDevice) ProtoMessage() {}

func (x *BaseDevice) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseDevice.ProtoReflect.Descriptor instead.
func (*BaseDevice) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{8}
}

func (x *BaseDevice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseDevice) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *BaseDevice) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *BaseDevice) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *BaseDevice) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BaseDevice) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *BaseDevice) GetLastSeen() *Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *BaseDevice) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BaseDevice) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// ACL-related message definitions
type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SrcNodes    []string   `protobuf:"bytes,4,rep,name=src_nodes,json=srcNodes,proto3" json:"src_nodes,omitempty"`
	DstNodes    []string   `protobuf:"bytes,5,rep,name=dst_nodes,json=dstNodes,proto3" json:"dst_nodes,omitempty"`
	Ports       []string   `protobuf:"bytes,6,rep,name=ports,proto3" json:"ports,omitempty"`
	Protocols   []string   `protobuf:"bytes,7,rep,name=protocols,proto3" json:"protocols,omitempty"`
	Enabled     bool       `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreatedAt   *Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{9}
}

func (x *Policy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Policy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Policy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Policy) GetSrcNodes() []string {
	if x != nil {
		return x.SrcNodes
	}
	return nil
}

func (x *Policy) GetDstNodes() []string {
	if x != nil {
		return x.DstNodes
	}
	return nil
}

func (x *Policy) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Policy) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *Policy) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Policy) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Policy) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type BaseAclNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcNodes []string `protobuf:"bytes,1,rep,name=src_nodes,json=srcNodes,proto3" json:"src_nodes,omitempty"`
	DstNodes []string `protobuf:"bytes,2,rep,name=dst_nodes,json=dstNodes,proto3" json:"dst_nodes,omitempty"`
}

func (x *BaseAclNodes) Reset() {
	*x = BaseAclNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseAclNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseAclNodes) ProtoMessage() {}

func (x *BaseAclNodes) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseAclNodes.ProtoReflect.Descriptor instead.
func (*BaseAclNodes) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{10}
}

func (x *BaseAclNodes) GetSrcNodes() []string {
	if x != nil {
		return x.SrcNodes
	}
	return nil
}

func (x *BaseAclNodes) GetDstNodes() []string {
	if x != nil {
		return x.DstNodes
	}
	return nil
}

type Acl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Nodes       *BaseAclNodes `protobuf:"bytes,4,opt,name=nodes,proto3" json:"nodes,omitempty"`
	Ports       []string      `protobuf:"bytes,5,rep,name=ports,proto3" json:"ports,omitempty"`
	Protocols   []string      `protobuf:"bytes,6,rep,name=protocols,proto3" json:"protocols,omitempty"`
	Enabled     bool          `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreatedAt   *Timestamp    `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *Timestamp    `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Acl) Reset() {
	*x = Acl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acl) ProtoMessage() {}

func (x *Acl) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acl.ProtoReflect.Descriptor instead.
func (*Acl) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{11}
}

func (x *Acl) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Acl) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Acl) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Acl) GetNodes() *BaseAclNodes {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Acl) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Acl) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *Acl) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Acl) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Acl) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// DNS-related message definitions
type SplitDNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Domain      string     `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Nodes       []string   `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Enabled     bool       `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreatedAt   *Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *SplitDNS) Reset() {
	*x = SplitDNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitDNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitDNS) ProtoMessage() {}

func (x *SplitDNS) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitDNS.ProtoReflect.Descriptor instead.
func (*SplitDNS) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{12}
}

func (x *SplitDNS) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SplitDNS) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SplitDNS) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SplitDNS) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *SplitDNS) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *SplitDNS) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SplitDNS) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SplitDNS) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Domain      string     `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Nodes       []string   `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Enabled     bool       `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreatedAt   *Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *DNS) Reset() {
	*x = DNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNS) ProtoMessage() {}

func (x *DNS) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNS.ProtoReflect.Descriptor instead.
func (*DNS) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{13}
}

func (x *DNS) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DNS) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DNS) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DNS) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DNS) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *DNS) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *DNS) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DNS) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Resource-related message definitions
type BaseResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type        string            `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Labels      map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedAt   *Timestamp        `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *Timestamp        `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BaseResource) Reset() {
	*x = BaseResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResource) ProtoMessage() {}

func (x *BaseResource) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResource.ProtoReflect.Descriptor instead.
func (*BaseResource) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{14}
}

func (x *BaseResource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseResource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BaseResource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BaseResource) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *BaseResource) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BaseResource) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Fleet-related message definitions
type BaseFleet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Nodes       []string          `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Labels      map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedAt   *Timestamp        `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *Timestamp        `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BaseFleet) Reset() {
	*x = BaseFleet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseFleet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseFleet) ProtoMessage() {}

func (x *BaseFleet) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseFleet.ProtoReflect.Descriptor instead.
func (*BaseFleet) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{15}
}

func (x *BaseFleet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseFleet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseFleet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BaseFleet) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *BaseFleet) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *BaseFleet) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BaseFleet) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Group-related message definitions
type BaseGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Nodes       []string   `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Users       []string   `protobuf:"bytes,5,rep,name=users,proto3" json:"users,omitempty"`
	CreatedAt   *Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BaseGroup) Reset() {
	*x = BaseGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseGroup) ProtoMessage() {}

func (x *BaseGroup) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseGroup.ProtoReflect.Descriptor instead.
func (*BaseGroup) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{16}
}

func (x *BaseGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BaseGroup) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *BaseGroup) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *BaseGroup) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BaseGroup) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GroupNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ip        string     `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	PublicKey string     `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Os        string     `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	Version   string     `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	IsOnline  bool       `protobuf:"varint,7,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	LastSeen  *Timestamp `protobuf:"bytes,8,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
}

func (x *GroupNode) Reset() {
	*x = GroupNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupNode) ProtoMessage() {}

func (x *GroupNode) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupNode.ProtoReflect.Descriptor instead.
func (*GroupNode) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{17}
}

func (x *GroupNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupNode) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GroupNode) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *GroupNode) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *GroupNode) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GroupNode) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *GroupNode) GetLastSeen() *Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

// Linker-related message definitions
type Linker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Subnet      string     `protobuf:"bytes,4,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Nodes       []string   `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Enabled     bool       `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreatedAt   *Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Linker) Reset() {
	*x = Linker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Linker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Linker) ProtoMessage() {}

func (x *Linker) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Linker.ProtoReflect.Descriptor instead.
func (*Linker) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{18}
}

func (x *Linker) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Linker) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Linker) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Linker) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

func (x *Linker) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Linker) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Linker) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Linker) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SubnetLinkerCovertibleNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ip        string     `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	PublicKey string     `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Os        string     `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	Version   string     `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	IsOnline  bool       `protobuf:"varint,7,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	LastSeen  *Timestamp `protobuf:"bytes,8,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
}

func (x *SubnetLinkerCovertibleNode) Reset() {
	*x = SubnetLinkerCovertibleNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubnetLinkerCovertibleNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubnetLinkerCovertibleNode) ProtoMessage() {}

func (x *SubnetLinkerCovertibleNode) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubnetLinkerCovertibleNode.ProtoReflect.Descriptor instead.
func (*SubnetLinkerCovertibleNode) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{19}
}

func (x *SubnetLinkerCovertibleNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubnetLinkerCovertibleNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubnetLinkerCovertibleNode) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SubnetLinkerCovertibleNode) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *SubnetLinkerCovertibleNode) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *SubnetLinkerCovertibleNode) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SubnetLinkerCovertibleNode) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *SubnetLinkerCovertibleNode) GetLastSeen() *Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

// Compose key-related message definitions
type ComposeKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key           string     `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	InstallScript string     `protobuf:"bytes,4,opt,name=install_script,json=installScript,proto3" json:"install_script,omitempty"`
	CreatedAt     *Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ComposeKey) Reset() {
	*x = ComposeKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposeKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeKey) ProtoMessage() {}

func (x *ComposeKey) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeKey.ProtoReflect.Descriptor instead.
func (*ComposeKey) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{20}
}

func (x *ComposeKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComposeKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComposeKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ComposeKey) GetInstallScript() string {
	if x != nil {
		return x.InstallScript
	}
	return ""
}

func (x *ComposeKey) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ComposeKey) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Overview-related message definitions
type OverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalNodes     int32 `protobuf:"varint,1,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	OnlineNodes    int32 `protobuf:"varint,2,opt,name=online_nodes,json=onlineNodes,proto3" json:"online_nodes,omitempty"`
	TotalUsers     int32 `protobuf:"varint,3,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	TotalGroups    int32 `protobuf:"varint,4,opt,name=total_groups,json=totalGroups,proto3" json:"total_groups,omitempty"`
	TotalAcls      int32 `protobuf:"varint,5,opt,name=total_acls,json=totalAcls,proto3" json:"total_acls,omitempty"`
	TotalDns       int32 `protobuf:"varint,6,opt,name=total_dns,json=totalDns,proto3" json:"total_dns,omitempty"`
	TotalLinkers   int32 `protobuf:"varint,7,opt,name=total_linkers,json=totalLinkers,proto3" json:"total_linkers,omitempty"`
	TotalFleets    int32 `protobuf:"varint,8,opt,name=total_fleets,json=totalFleets,proto3" json:"total_fleets,omitempty"`
	TotalResources int32 `protobuf:"varint,9,opt,name=total_resources,json=totalResources,proto3" json:"total_resources,omitempty"`
}

func (x *OverviewResponse) Reset() {
	*x = OverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewResponse) ProtoMessage() {}

func (x *OverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewResponse.ProtoReflect.Descriptor instead.
func (*OverviewResponse) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{21}
}

func (x *OverviewResponse) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *OverviewResponse) GetOnlineNodes() int32 {
	if x != nil {
		return x.OnlineNodes
	}
	return 0
}

func (x *OverviewResponse) GetTotalUsers() int32 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *OverviewResponse) GetTotalGroups() int32 {
	if x != nil {
		return x.TotalGroups
	}
	return 0
}

func (x *OverviewResponse) GetTotalAcls() int32 {
	if x != nil {
		return x.TotalAcls
	}
	return 0
}

func (x *OverviewResponse) GetTotalDns() int32 {
	if x != nil {
		return x.TotalDns
	}
	return 0
}

func (x *OverviewResponse) GetTotalLinkers() int32 {
	if x != nil {
		return x.TotalLinkers
	}
	return 0
}

func (x *OverviewResponse) GetTotalFleets() int32 {
	if x != nil {
		return x.TotalFleets
	}
	return 0
}

func (x *OverviewResponse) GetTotalResources() int32 {
	if x != nil {
		return x.TotalResources
	}
	return 0
}

// DNS-related additional message definitions
type UpdateSplitDNSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameServer string `protobuf:"bytes,1,opt,name=name_server,json=nameServer,proto3" json:"name_server,omitempty"`
	Domain     string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *UpdateSplitDNSRequest) Reset() {
	*x = UpdateSplitDNSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSplitDNSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSplitDNSRequest) ProtoMessage() {}

func (x *UpdateSplitDNSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSplitDNSRequest.ProtoReflect.Descriptor instead.
func (*UpdateSplitDNSRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateSplitDNSRequest) GetNameServer() string {
	if x != nil {
		return x.NameServer
	}
	return ""
}

func (x *UpdateSplitDNSRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type CreateSplitDNSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SplitDns *SplitDNS `protobuf:"bytes,1,opt,name=split_dns,json=splitDns,proto3" json:"split_dns,omitempty"`
}

func (x *CreateSplitDNSRequest) Reset() {
	*x = CreateSplitDNSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSplitDNSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSplitDNSRequest) ProtoMessage() {}

func (x *CreateSplitDNSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSplitDNSRequest.ProtoReflect.Descriptor instead.
func (*CreateSplitDNSRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{23}
}

func (x *CreateSplitDNSRequest) GetSplitDns() *SplitDNS {
	if x != nil {
		return x.SplitDns
	}
	return nil
}

type DeleteSplitDNSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SplitDnsId int32 `protobuf:"varint,1,opt,name=split_dns_id,json=splitDnsId,proto3" json:"split_dns_id,omitempty"`
}

func (x *DeleteSplitDNSRequest) Reset() {
	*x = DeleteSplitDNSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSplitDNSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSplitDNSRequest) ProtoMessage() {}

func (x *DeleteSplitDNSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSplitDNSRequest.ProtoReflect.Descriptor instead.
func (*DeleteSplitDNSRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteSplitDNSRequest) GetSplitDnsId() int32 {
	if x != nil {
		return x.SplitDnsId
	}
	return 0
}

type UpdateDNSSearchDomainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchDomains []string `protobuf:"bytes,1,rep,name=search_domains,json=searchDomains,proto3" json:"search_domains,omitempty"`
}

func (x *UpdateDNSSearchDomainsRequest) Reset() {
	*x = UpdateDNSSearchDomainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDNSSearchDomainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDNSSearchDomainsRequest) ProtoMessage() {}

func (x *UpdateDNSSearchDomainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDNSSearchDomainsRequest.ProtoReflect.Descriptor instead.
func (*UpdateDNSSearchDomainsRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateDNSSearchDomainsRequest) GetSearchDomains() []string {
	if x != nil {
		return x.SearchDomains
	}
	return nil
}

type UpdateDNSNameServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameServers []string `protobuf:"bytes,1,rep,name=name_servers,json=nameServers,proto3" json:"name_servers,omitempty"`
}

func (x *UpdateDNSNameServersRequest) Reset() {
	*x = UpdateDNSNameServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDNSNameServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDNSNameServersRequest) ProtoMessage() {}

func (x *UpdateDNSNameServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDNSNameServersRequest.ProtoReflect.Descriptor instead.
func (*UpdateDNSNameServersRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateDNSNameServersRequest) GetNameServers() []string {
	if x != nil {
		return x.NameServers
	}
	return nil
}

type BaseUpdateDNSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OverrideLocalDns bool `protobuf:"varint,1,opt,name=override_local_dns,json=overrideLocalDns,proto3" json:"override_local_dns,omitempty"`
}

func (x *BaseUpdateDNSRequest) Reset() {
	*x = BaseUpdateDNSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseUpdateDNSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseUpdateDNSRequest) ProtoMessage() {}

func (x *BaseUpdateDNSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseUpdateDNSRequest.ProtoReflect.Descriptor instead.
func (*BaseUpdateDNSRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{27}
}

func (x *BaseUpdateDNSRequest) GetOverrideLocalDns() bool {
	if x != nil {
		return x.OverrideLocalDns
	}
	return false
}

// Fleet-related additional message definitions
type UpdateFleetDescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateFleetDescriptionRequest) Reset() {
	*x = UpdateFleetDescriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFleetDescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFleetDescriptionRequest) ProtoMessage() {}

func (x *UpdateFleetDescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFleetDescriptionRequest.ProtoReflect.Descriptor instead.
func (*UpdateFleetDescriptionRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateFleetDescriptionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Compose key-related additional message definitions
type GetComposeKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Ports       string `protobuf:"bytes,3,opt,name=ports,proto3" json:"ports,omitempty"`
	IsReusable  bool   `protobuf:"varint,4,opt,name=is_reusable,json=isReusable,proto3" json:"is_reusable,omitempty"`
}

func (x *GetComposeKeyRequest) Reset() {
	*x = GetComposeKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComposeKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComposeKeyRequest) ProtoMessage() {}

func (x *GetComposeKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComposeKeyRequest.ProtoReflect.Descriptor instead.
func (*GetComposeKeyRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{29}
}

func (x *GetComposeKeyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetComposeKeyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetComposeKeyRequest) GetPorts() string {
	if x != nil {
		return x.Ports
	}
	return ""
}

func (x *GetComposeKeyRequest) GetIsReusable() bool {
	if x != nil {
		return x.IsReusable
	}
	return false
}

type GetComposeKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstallScripts string `protobuf:"bytes,1,opt,name=install_scripts,json=installScripts,proto3" json:"install_scripts,omitempty"`
	ComposeKey     string `protobuf:"bytes,2,opt,name=compose_key,json=composeKey,proto3" json:"compose_key,omitempty"`
}

func (x *GetComposeKeyResponse) Reset() {
	*x = GetComposeKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComposeKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComposeKeyResponse) ProtoMessage() {}

func (x *GetComposeKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComposeKeyResponse.ProtoReflect.Descriptor instead.
func (*GetComposeKeyResponse) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{30}
}

func (x *GetComposeKeyResponse) GetInstallScripts() string {
	if x != nil {
		return x.InstallScripts
	}
	return ""
}

func (x *GetComposeKeyResponse) GetComposeKey() string {
	if x != nil {
		return x.ComposeKey
	}
	return ""
}

type GenerateComposeKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ports string `protobuf:"bytes,1,opt,name=ports,proto3" json:"ports,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GenerateComposeKeyRequest) Reset() {
	*x = GenerateComposeKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateComposeKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateComposeKeyRequest) ProtoMessage() {}

func (x *GenerateComposeKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateComposeKeyRequest.ProtoReflect.Descriptor instead.
func (*GenerateComposeKeyRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{31}
}

func (x *GenerateComposeKeyRequest) GetPorts() string {
	if x != nil {
		return x.Ports
	}
	return ""
}

func (x *GenerateComposeKeyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Team invitation-related message definitions
type InviteTeamMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string    `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Role  UserRoles `protobuf:"varint,2,opt,name=role,proto3,enum=protos.UserRoles" json:"role,omitempty"`
}

func (x *InviteTeamMember) Reset() {
	*x = InviteTeamMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteTeamMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteTeamMember) ProtoMessage() {}

func (x *InviteTeamMember) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteTeamMember.ProtoReflect.Descriptor instead.
func (*InviteTeamMember) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{32}
}

func (x *InviteTeamMember) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InviteTeamMember) GetRole() UserRoles {
	if x != nil {
		return x.Role
	}
	return UserRoles_USER_ROLE_UNSPECIFIED
}

type InviteTeamMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members        []*InviteTeamMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	RedirectTo     string              `protobuf:"bytes,2,opt,name=redirect_to,json=redirectTo,proto3" json:"redirect_to,omitempty"`
	RevalidatePath string              `protobuf:"bytes,3,opt,name=revalidate_path,json=revalidatePath,proto3" json:"revalidate_path,omitempty"`
}

func (x *InviteTeamMembersRequest) Reset() {
	*x = InviteTeamMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteTeamMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteTeamMembersRequest) ProtoMessage() {}

func (x *InviteTeamMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_dtos_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteTeamMembersRequest.ProtoReflect.Descriptor instead.
func (*InviteTeamMembersRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_dtos_proto_rawDescGZIP(), []int{33}
}

func (x *InviteTeamMembersRequest) GetMembers() []*InviteTeamMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *InviteTeamMembersRequest) GetRedirectTo() string {
	if x != nil {
		return x.RedirectTo
	}
	return ""
}

func (x *InviteTeamMembersRequest) GetRevalidatePath() string {
	if x != nil {
		return x.RevalidatePath
	}
	return ""
}

var File_runetale_runetale_v1_dtos_proto protoreflect.FileDescriptor

var file_runetale_runetale_v1_dtos_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x72, 0x75, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x65, 0x2f, 0x72, 0x75, 0x6e, 0x65, 0x74,
	0x61, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x3b, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x1c, 0x0a, 0x0a, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b,
	0x22, 0x3a, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x1a,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x22, 0x40, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2e, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x22, 0xfa, 0x01,
	0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xba, 0x02, 0x0a, 0x0a, 0x42,
	0x61, 0x73, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x65, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xba, 0x02, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x72, 0x63, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x72, 0x63,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x73, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x48, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x41, 0x63, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x72, 0x63, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x72, 0x63, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xa9,
	0x02, 0x0a, 0x03, 0x41, 0x63, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x41, 0x63, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xfc, 0x01, 0x0a, 0x08, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x44, 0x4e, 0x53, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf7, 0x01, 0x0a, 0x03, 0x44, 0x4e,
	0x53, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xc1, 0x02, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x02, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65,
	0x46, 0x6c, 0x65, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x35, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x46,
	0x6c, 0x65, 0x65, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe1, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x65, 0x65, 0x6e, 0x22, 0xfa, 0x01, 0x0a, 0x06, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xe6, 0x01, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65,
	0x72, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x22, 0xcd, 0x01, 0x0a, 0x0a, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc7, 0x02, 0x0a, 0x10, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x63, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x63, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64,
	0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44,
	0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x44, 0x4e, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x46, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x44, 0x4e, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x44, 0x4e, 0x53, 0x52, 0x08, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x6e, 0x73, 0x22, 0x39, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x4e, 0x53, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f,
	0x64, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x70,
	0x6c, 0x69, 0x74, 0x44, 0x6e, 0x73, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x22, 0x40, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x4e, 0x53, 0x4e, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x22, 0x44, 0x0a, 0x14, 0x42, 0x61, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x4e, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x6e, 0x73, 0x22, 0x41, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x61, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x65, 0x4b, 0x65, 0x79, 0x22, 0x45, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x10, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x98, 0x01, 0x0a,
	0x18, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x2a, 0x70, 0x0a, 0x02, 0x4f, 0x53, 0x12, 0x12, 0x0a,
	0x0e, 0x4f, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x53, 0x5f, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x4f, 0x53, 0x5f, 0x4d, 0x41, 0x43, 0x4f, 0x53, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x4f, 0x53, 0x5f, 0x49, 0x4f, 0x53, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53, 0x5f,
	0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x06, 0x2a, 0xff, 0x01, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f,
	0x52, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x44, 0x4f, 0x43,
	0x4b, 0x45, 0x52, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52,
	0x4d, 0x5f, 0x43, 0x4c, 0x49, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4c, 0x41, 0x54, 0x46,
	0x4f, 0x52, 0x4d, 0x5f, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x50,
	0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x47, 0x43, 0x50, 0x10, 0x04, 0x12, 0x13, 0x0a,
	0x0f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x41,
	0x57, 0x53, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d,
	0x5f, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4c, 0x41, 0x54,
	0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4f, 0x4e, 0x50, 0x52, 0x45, 0x4d, 0x10, 0x08, 0x12, 0x12, 0x0a,
	0x0e, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4d, 0x41, 0x43, 0x4f, 0x53, 0x10,
	0x09, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x57, 0x49,
	0x4e, 0x44, 0x4f, 0x57, 0x53, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4c, 0x41, 0x54, 0x46,
	0x4f, 0x52, 0x4d, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x0b, 0x2a, 0x83, 0x01, 0x0a, 0x07,
	0x49, 0x50, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x50, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x41, 0x4c,
	0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f,
	0x54, 0x43, 0x50, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x5f, 0x55, 0x44, 0x50, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x50, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x5f, 0x49, 0x43, 0x4d, 0x50, 0x56, 0x34, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x49, 0x43, 0x4d, 0x50, 0x56, 0x36, 0x10,
	0x05, 0x2a, 0x86, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x6c, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x4c, 0x59, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x4c, 0x59, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x01, 0x12, 0x1b,
	0x0a, 0x17, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x4c, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x54, 0x57, 0x4f, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x45,
	0x58, 0x50, 0x49, 0x52, 0x45, 0x4c, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x48, 0x52,
	0x45, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x03, 0x2a, 0x4f, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x42, 0x08, 0x5a, 0x06, 0x2e,
	0x2f, 0x64, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_runetale_runetale_v1_dtos_proto_rawDescOnce sync.Once
	file_runetale_runetale_v1_dtos_proto_rawDescData = file_runetale_runetale_v1_dtos_proto_rawDesc
)

func file_runetale_runetale_v1_dtos_proto_rawDescGZIP() []byte {
	file_runetale_runetale_v1_dtos_proto_rawDescOnce.Do(func() {
		file_runetale_runetale_v1_dtos_proto_rawDescData = protoimpl.X.CompressGZIP(file_runetale_runetale_v1_dtos_proto_rawDescData)
	})
	return file_runetale_runetale_v1_dtos_proto_rawDescData
}

var file_runetale_runetale_v1_dtos_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_runetale_runetale_v1_dtos_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_runetale_runetale_v1_dtos_proto_goTypes = []interface{}{
	(OS)(0),                               // 0: protos.OS
	(Platform)(0),                         // 1: protos.Platform
	(IPProto)(0),                          // 2: protos.IPProto
	(ExpirelyTime)(0),                     // 3: protos.ExpirelyTime
	(UserRoles)(0),                        // 4: protos.UserRoles
	(*Timestamp)(nil),                     // 5: protos.Timestamp
	(*LogoutResponse)(nil),                // 6: protos.LogoutResponse
	(*OkResponse)(nil),                    // 7: protos.OkResponse
	(*VerifyLoginSessionRequest)(nil),     // 8: protos.VerifyLoginSessionRequest
	(*VerifyLoginSessionResponse)(nil),    // 9: protos.VerifyLoginSessionResponse
	(*UserRole)(nil),                      // 10: protos.UserRole
	(*BaseUserNode)(nil),                  // 11: protos.BaseUserNode
	(*BaseUser)(nil),                      // 12: protos.BaseUser
	(*BaseDevice)(nil),                    // 13: protos.BaseDevice
	(*Policy)(nil),                        // 14: protos.Policy
	(*BaseAclNodes)(nil),                  // 15: protos.BaseAclNodes
	(*Acl)(nil),                           // 16: protos.Acl
	(*SplitDNS)(nil),                      // 17: protos.SplitDNS
	(*DNS)(nil),                           // 18: protos.DNS
	(*BaseResource)(nil),                  // 19: protos.BaseResource
	(*BaseFleet)(nil),                     // 20: protos.BaseFleet
	(*BaseGroup)(nil),                     // 21: protos.BaseGroup
	(*GroupNode)(nil),                     // 22: protos.GroupNode
	(*Linker)(nil),                        // 23: protos.Linker
	(*SubnetLinkerCovertibleNode)(nil),    // 24: protos.SubnetLinkerCovertibleNode
	(*ComposeKey)(nil),                    // 25: protos.ComposeKey
	(*OverviewResponse)(nil),              // 26: protos.OverviewResponse
	(*UpdateSplitDNSRequest)(nil),         // 27: protos.UpdateSplitDNSRequest
	(*CreateSplitDNSRequest)(nil),         // 28: protos.CreateSplitDNSRequest
	(*DeleteSplitDNSRequest)(nil),         // 29: protos.DeleteSplitDNSRequest
	(*UpdateDNSSearchDomainsRequest)(nil), // 30: protos.UpdateDNSSearchDomainsRequest
	(*UpdateDNSNameServersRequest)(nil),   // 31: protos.UpdateDNSNameServersRequest
	(*BaseUpdateDNSRequest)(nil),          // 32: protos.BaseUpdateDNSRequest
	(*UpdateFleetDescriptionRequest)(nil), // 33: protos.UpdateFleetDescriptionRequest
	(*GetComposeKeyRequest)(nil),          // 34: protos.GetComposeKeyRequest
	(*GetComposeKeyResponse)(nil),         // 35: protos.GetComposeKeyResponse
	(*GenerateComposeKeyRequest)(nil),     // 36: protos.GenerateComposeKeyRequest
	(*InviteTeamMember)(nil),              // 37: protos.InviteTeamMember
	(*InviteTeamMembersRequest)(nil),      // 38: protos.InviteTeamMembersRequest
	nil,                                   // 39: protos.BaseResource.LabelsEntry
	nil,                                   // 40: protos.BaseFleet.LabelsEntry
}
var file_runetale_runetale_v1_dtos_proto_depIdxs = []int32{
	5,  // 0: protos.BaseUserNode.last_seen:type_name -> protos.Timestamp
	10, // 1: protos.BaseUser.role:type_name -> protos.UserRole
	11, // 2: protos.BaseUser.nodes:type_name -> protos.BaseUserNode
	5,  // 3: protos.BaseUser.created_at:type_name -> protos.Timestamp
	5,  // 4: protos.BaseUser.updated_at:type_name -> protos.Timestamp
	5,  // 5: protos.BaseDevice.last_seen:type_name -> protos.Timestamp
	5,  // 6: protos.BaseDevice.created_at:type_name -> protos.Timestamp
	5,  // 7: protos.BaseDevice.updated_at:type_name -> protos.Timestamp
	5,  // 8: protos.Policy.created_at:type_name -> protos.Timestamp
	5,  // 9: protos.Policy.updated_at:type_name -> protos.Timestamp
	15, // 10: protos.Acl.nodes:type_name -> protos.BaseAclNodes
	5,  // 11: protos.Acl.created_at:type_name -> protos.Timestamp
	5,  // 12: protos.Acl.updated_at:type_name -> protos.Timestamp
	5,  // 13: protos.SplitDNS.created_at:type_name -> protos.Timestamp
	5,  // 14: protos.SplitDNS.updated_at:type_name -> protos.Timestamp
	5,  // 15: protos.DNS.created_at:type_name -> protos.Timestamp
	5,  // 16: protos.DNS.updated_at:type_name -> protos.Timestamp
	39, // 17: protos.BaseResource.labels:type_name -> protos.BaseResource.LabelsEntry
	5,  // 18: protos.BaseResource.created_at:type_name -> protos.Timestamp
	5,  // 19: protos.BaseResource.updated_at:type_name -> protos.Timestamp
	40, // 20: protos.BaseFleet.labels:type_name -> protos.BaseFleet.LabelsEntry
	5,  // 21: protos.BaseFleet.created_at:type_name -> protos.Timestamp
	5,  // 22: protos.BaseFleet.updated_at:type_name -> protos.Timestamp
	5,  // 23: protos.BaseGroup.created_at:type_name -> protos.Timestamp
	5,  // 24: protos.BaseGroup.updated_at:type_name -> protos.Timestamp
	5,  // 25: protos.GroupNode.last_seen:type_name -> protos.Timestamp
	5,  // 26: protos.Linker.created_at:type_name -> protos.Timestamp
	5,  // 27: protos.Linker.updated_at:type_name -> protos.Timestamp
	5,  // 28: protos.SubnetLinkerCovertibleNode.last_seen:type_name -> protos.Timestamp
	5,  // 29: protos.ComposeKey.created_at:type_name -> protos.Timestamp
	5,  // 30: protos.ComposeKey.updated_at:type_name -> protos.Timestamp
	17, // 31: protos.CreateSplitDNSRequest.split_dns:type_name -> protos.SplitDNS
	4,  // 32: protos.InviteTeamMember.role:type_name -> protos.UserRoles
	37, // 33: protos.InviteTeamMembersRequest.members:type_name -> protos.InviteTeamMember
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_runetale_runetale_v1_dtos_proto_init() }
func file_runetale_runetale_v1_dtos_proto_init() {
	if File_runetale_runetale_v1_dtos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_runetale_runetale_v1_dtos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyLoginSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyLoginSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseUserNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseAclNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitDNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseFleet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Linker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubnetLinkerCovertibleNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposeKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSplitDNSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSplitDNSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSplitDNSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDNSSearchDomainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDNSNameServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseUpdateDNSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFleetDescriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComposeKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComposeKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateComposeKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteTeamMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_dtos_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteTeamMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_runetale_runetale_v1_dtos_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_runetale_runetale_v1_dtos_proto_goTypes,
		DependencyIndexes: file_runetale_runetale_v1_dtos_proto_depIdxs,
		EnumInfos:         file_runetale_runetale_v1_dtos_proto_enumTypes,
		MessageInfos:      file_runetale_runetale_v1_dtos_proto_msgTypes,
	}.Build()
	File_runetale_runetale_v1_dtos_proto = out.File
	file_runetale_runetale_v1_dtos_proto_rawDesc = nil
	file_runetale_runetale_v1_dtos_proto_goTypes = nil
	file_runetale_runetale_v1_dtos_proto_depIdxs = nil
}
