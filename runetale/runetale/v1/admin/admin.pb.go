// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.3
// source: runetale/runetale/v1/admin.proto

package admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeploymentMethod int32

const (
	DeploymentMethod_DOCKER DeploymentMethod = 0
	DeploymentMethod_CLI    DeploymentMethod = 1
	DeploymentMethod_LINUX  DeploymentMethod = 2
	DeploymentMethod_GCP    DeploymentMethod = 3
	DeploymentMethod_MANUAL DeploymentMethod = 4
	DeploymentMethod_AWS    DeploymentMethod = 5
	DeploymentMethod_Azure  DeploymentMethod = 6
	DeploymentMethod_Onprem DeploymentMethod = 7
	DeploymentMethod_Other  DeploymentMethod = 8
)

// Enum value maps for DeploymentMethod.
var (
	DeploymentMethod_name = map[int32]string{
		0: "DOCKER",
		1: "CLI",
		2: "LINUX",
		3: "GCP",
		4: "MANUAL",
		5: "AWS",
		6: "Azure",
		7: "Onprem",
		8: "Other",
	}
	DeploymentMethod_value = map[string]int32{
		"DOCKER": 0,
		"CLI":    1,
		"LINUX":  2,
		"GCP":    3,
		"MANUAL": 4,
		"AWS":    5,
		"Azure":  6,
		"Onprem": 7,
		"Other":  8,
	}
)

func (x DeploymentMethod) Enum() *DeploymentMethod {
	p := new(DeploymentMethod)
	*p = x
	return p
}

func (x DeploymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_runetale_runetale_v1_admin_proto_enumTypes[0].Descriptor()
}

func (DeploymentMethod) Type() protoreflect.EnumType {
	return &file_runetale_runetale_v1_admin_proto_enumTypes[0]
}

func (x DeploymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentMethod.Descriptor instead.
func (DeploymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{0}
}

type CreateAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Src   []uint64 `protobuf:"varint,2,rep,packed,name=src,proto3" json:"src,omitempty"` // user ids
	Dst   []uint64 `protobuf:"varint,3,rep,packed,name=dst,proto3" json:"dst,omitempty"` // user ids
	Proto string   `protobuf:"bytes,4,opt,name=proto,proto3" json:"proto,omitempty"`
	Port  string   `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *CreateAclRequest) Reset() {
	*x = CreateAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAclRequest) ProtoMessage() {}

func (x *CreateAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAclRequest.ProtoReflect.Descriptor instead.
func (*CreateAclRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAclRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAclRequest) GetSrc() []uint64 {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *CreateAclRequest) GetDst() []uint64 {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *CreateAclRequest) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *CreateAclRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type PatchAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // acl id
	Name  string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Src   []uint64 `protobuf:"varint,3,rep,packed,name=src,proto3" json:"src,omitempty"` // user ids
	Dst   []uint64 `protobuf:"varint,4,rep,packed,name=dst,proto3" json:"dst,omitempty"` // user ids
	Proto string   `protobuf:"bytes,5,opt,name=proto,proto3" json:"proto,omitempty"`
	Port  string   `protobuf:"bytes,6,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *PatchAclRequest) Reset() {
	*x = PatchAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchAclRequest) ProtoMessage() {}

func (x *PatchAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchAclRequest.ProtoReflect.Descriptor instead.
func (*PatchAclRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{1}
}

func (x *PatchAclRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchAclRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PatchAclRequest) GetSrc() []uint64 {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *PatchAclRequest) GetDst() []uint64 {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *PatchAclRequest) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *PatchAclRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type GetAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAclRequest) Reset() {
	*x = GetAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAclRequest) ProtoMessage() {}

func (x *GetAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAclRequest.ProtoReflect.Descriptor instead.
func (*GetAclRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{2}
}

func (x *GetAclRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAclsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acls []*AclResponse `protobuf:"bytes,1,rep,name=acls,proto3" json:"acls,omitempty"`
}

func (x *GetAclsResponse) Reset() {
	*x = GetAclsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAclsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAclsResponse) ProtoMessage() {}

func (x *GetAclsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAclsResponse.ProtoReflect.Descriptor instead.
func (*GetAclsResponse) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{3}
}

func (x *GetAclsResponse) GetAcls() []*AclResponse {
	if x != nil {
		return x.Acls
	}
	return nil
}

type AclResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Src   []uint64 `protobuf:"varint,3,rep,packed,name=src,proto3" json:"src,omitempty"` // user ids
	Dst   []uint64 `protobuf:"varint,4,rep,packed,name=dst,proto3" json:"dst,omitempty"` // user ids
	Proto string   `protobuf:"bytes,5,opt,name=proto,proto3" json:"proto,omitempty"`
	Port  string   `protobuf:"bytes,6,opt,name=port,proto3" json:"port,omitempty"`
	Age   string   `protobuf:"bytes,7,opt,name=age,proto3" json:"age,omitempty"`
}

func (x *AclResponse) Reset() {
	*x = AclResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AclResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclResponse) ProtoMessage() {}

func (x *AclResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclResponse.ProtoReflect.Descriptor instead.
func (*AclResponse) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{4}
}

func (x *AclResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AclResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AclResponse) GetSrc() []uint64 {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *AclResponse) GetDst() []uint64 {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *AclResponse) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *AclResponse) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *AclResponse) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

type GetMeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Picture  string `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty"`
	IsOwner  bool   `protobuf:"varint,4,opt,name=isOwner,proto3" json:"isOwner,omitempty"`
}

func (x *GetMeResponse) Reset() {
	*x = GetMeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeResponse) ProtoMessage() {}

func (x *GetMeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeResponse.ProtoReflect.Descriptor instead.
func (*GetMeResponse) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{5}
}

func (x *GetMeResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetMeResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetMeResponse) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *GetMeResponse) GetIsOwner() bool {
	if x != nil {
		return x.IsOwner
	}
	return false
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{7}
}

func (x *Users) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type AddNewDstsForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // user id
	ResourceIds []uint64 `protobuf:"varint,2,rep,packed,name=resourceIds,proto3" json:"resourceIds,omitempty"`
	FleetIds    []uint64 `protobuf:"varint,3,rep,packed,name=fleetIds,proto3" json:"fleetIds,omitempty"`
}

func (x *AddNewDstsForUserRequest) Reset() {
	*x = AddNewDstsForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewDstsForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewDstsForUserRequest) ProtoMessage() {}

func (x *AddNewDstsForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewDstsForUserRequest.ProtoReflect.Descriptor instead.
func (*AddNewDstsForUserRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{8}
}

func (x *AddNewDstsForUserRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddNewDstsForUserRequest) GetResourceIds() []uint64 {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

func (x *AddNewDstsForUserRequest) GetFleetIds() []uint64 {
	if x != nil {
		return x.FleetIds
	}
	return nil
}

type AddGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // group id
	UserIds []uint64 `protobuf:"varint,3,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *AddGroupsRequest) Reset() {
	*x = AddGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupsRequest) ProtoMessage() {}

func (x *AddGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupsRequest.ProtoReflect.Descriptor instead.
func (*AddGroupsRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{9}
}

func (x *AddGroupsRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddGroupsRequest) GetUserIds() []uint64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserIds []uint64 `protobuf:"varint,2,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{10}
}

func (x *CreateGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGroupRequest) GetUserIds() []uint64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type PatchGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UserIds []uint64 `protobuf:"varint,3,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *PatchGroupRequest) Reset() {
	*x = PatchGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchGroupRequest) ProtoMessage() {}

func (x *PatchGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchGroupRequest.ProtoReflect.Descriptor instead.
func (*PatchGroupRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{11}
}

func (x *PatchGroupRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PatchGroupRequest) GetUserIds() []uint64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type GetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetGroupRequest) Reset() {
	*x = GetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequest) ProtoMessage() {}

func (x *GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{12}
}

func (x *GetGroupRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Groups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Groups) Reset() {
	*x = Groups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Groups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Groups) ProtoMessage() {}

func (x *Groups) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Groups.ProtoReflect.Descriptor instead.
func (*Groups) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{13}
}

func (x *Groups) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type UserWithPicture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`           // user id
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // user name
	Picture string `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty"` // picture url
}

func (x *UserWithPicture) Reset() {
	*x = UserWithPicture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWithPicture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWithPicture) ProtoMessage() {}

func (x *UserWithPicture) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWithPicture.ProtoReflect.Descriptor instead.
func (*UserWithPicture) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{14}
}

func (x *UserWithPicture) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserWithPicture) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserWithPicture) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

type AddNewDstForGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // group id
	ResourceIds []uint64 `protobuf:"varint,2,rep,packed,name=resourceIds,proto3" json:"resourceIds,omitempty"`
	FleetIds    []uint64 `protobuf:"varint,3,rep,packed,name=fleetIds,proto3" json:"fleetIds,omitempty"`
}

func (x *AddNewDstForGroupRequest) Reset() {
	*x = AddNewDstForGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewDstForGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewDstForGroupRequest) ProtoMessage() {}

func (x *AddNewDstForGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewDstForGroupRequest.ProtoReflect.Descriptor instead.
func (*AddNewDstForGroupRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{15}
}

func (x *AddNewDstForGroupRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddNewDstForGroupRequest) GetResourceIds() []uint64 {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

func (x *AddNewDstForGroupRequest) GetFleetIds() []uint64 {
	if x != nil {
		return x.FleetIds
	}
	return nil
}

type GetDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDevicesRequest) Reset() {
	*x = GetDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesRequest) ProtoMessage() {}

func (x *GetDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesRequest.ProtoReflect.Descriptor instead.
func (*GetDevicesRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{16}
}

func (x *GetDevicesRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Devices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *Devices) Reset() {
	*x = Devices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devices) ProtoMessage() {}

func (x *Devices) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devices.ProtoReflect.Descriptor instead.
func (*Devices) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{17}
}

func (x *Devices) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type CreateResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateResourceRequest) Reset() {
	*x = CreateResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceRequest) ProtoMessage() {}

func (x *CreateResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceRequest.ProtoReflect.Descriptor instead.
func (*CreateResourceRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{18}
}

func (x *CreateResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateResourceResponse) Reset() {
	*x = CreateResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceResponse) ProtoMessage() {}

func (x *CreateResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceResponse.ProtoReflect.Descriptor instead.
func (*CreateResourceResponse) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{19}
}

func (x *CreateResourceResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GenerateTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentMethod DeploymentMethod `protobuf:"varint,1,opt,name=deploymentMethod,proto3,enum=protos.DeploymentMethod" json:"deploymentMethod,omitempty"`
}

func (x *GenerateTokenRequest) Reset() {
	*x = GenerateTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenRequest) ProtoMessage() {}

func (x *GenerateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateTokenRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{20}
}

func (x *GenerateTokenRequest) GetDeploymentMethod() DeploymentMethod {
	if x != nil {
		return x.DeploymentMethod
	}
	return DeploymentMethod_DOCKER
}

type GenerateTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GenerateTokenResponse) Reset() {
	*x = GenerateTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenResponse) ProtoMessage() {}

func (x *GenerateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateTokenResponse) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{21}
}

func (x *GenerateTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type PatchResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PatchResourceRequest) Reset() {
	*x = PatchResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchResourceRequest) ProtoMessage() {}

func (x *PatchResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchResourceRequest.ProtoReflect.Descriptor instead.
func (*PatchResourceRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{22}
}

func (x *PatchResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetResourceRequest) Reset() {
	*x = GetResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceRequest) ProtoMessage() {}

func (x *GetResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceRequest.ProtoReflect.Descriptor instead.
func (*GetResourceRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{23}
}

func (x *GetResourceRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *Resources) Reset() {
	*x = Resources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{24}
}

func (x *Resources) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type AddNewSrcsForResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // resource id
	UserIds  []uint64 `protobuf:"varint,2,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
	GroupIds []uint64 `protobuf:"varint,3,rep,packed,name=groupIds,proto3" json:"groupIds,omitempty"`
}

func (x *AddNewSrcsForResourceRequest) Reset() {
	*x = AddNewSrcsForResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewSrcsForResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewSrcsForResourceRequest) ProtoMessage() {}

func (x *AddNewSrcsForResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewSrcsForResourceRequest.ProtoReflect.Descriptor instead.
func (*AddNewSrcsForResourceRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{25}
}

func (x *AddNewSrcsForResourceRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddNewSrcsForResourceRequest) GetUserIds() []uint64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *AddNewSrcsForResourceRequest) GetGroupIds() []uint64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

type AddFleetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // resource id
	FleetIds []uint64 `protobuf:"varint,3,rep,packed,name=fleetIds,proto3" json:"fleetIds,omitempty"`
}

func (x *AddFleetsRequest) Reset() {
	*x = AddFleetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFleetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFleetsRequest) ProtoMessage() {}

func (x *AddFleetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFleetsRequest.ProtoReflect.Descriptor instead.
func (*AddFleetsRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{26}
}

func (x *AddFleetsRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddFleetsRequest) GetFleetIds() []uint64 {
	if x != nil {
		return x.FleetIds
	}
	return nil
}

type CreateFleetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc        string           `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	ResourceIds []uint64         `protobuf:"varint,3,rep,packed,name=resourceIds,proto3" json:"resourceIds,omitempty"`
	Proto       string           `protobuf:"bytes,4,opt,name=proto,proto3" json:"proto,omitempty"`
	Port        string           `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
	Type        DeploymentMethod `protobuf:"varint,6,opt,name=type,proto3,enum=protos.DeploymentMethod" json:"type,omitempty"`
}

func (x *CreateFleetRequest) Reset() {
	*x = CreateFleetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFleetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFleetRequest) ProtoMessage() {}

func (x *CreateFleetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFleetRequest.ProtoReflect.Descriptor instead.
func (*CreateFleetRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{27}
}

func (x *CreateFleetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFleetRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateFleetRequest) GetResourceIds() []uint64 {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

func (x *CreateFleetRequest) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *CreateFleetRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *CreateFleetRequest) GetType() DeploymentMethod {
	if x != nil {
		return x.Type
	}
	return DeploymentMethod_DOCKER
}

type PatchFleetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // fleet id
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc        string   `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	ResourceIds []uint64 `protobuf:"varint,4,rep,packed,name=resourceIds,proto3" json:"resourceIds,omitempty"`
	Proto       string   `protobuf:"bytes,5,opt,name=proto,proto3" json:"proto,omitempty"`
	Port        string   `protobuf:"bytes,6,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *PatchFleetRequest) Reset() {
	*x = PatchFleetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchFleetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchFleetRequest) ProtoMessage() {}

func (x *PatchFleetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchFleetRequest.ProtoReflect.Descriptor instead.
func (*PatchFleetRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{28}
}

func (x *PatchFleetRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchFleetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PatchFleetRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PatchFleetRequest) GetResourceIds() []uint64 {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

func (x *PatchFleetRequest) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *PatchFleetRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type GetFleetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFleetRequest) Reset() {
	*x = GetFleetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFleetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFleetRequest) ProtoMessage() {}

func (x *GetFleetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFleetRequest.ProtoReflect.Descriptor instead.
func (*GetFleetRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{29}
}

func (x *GetFleetRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Fleets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fleets []*Fleet `protobuf:"bytes,1,rep,name=fleets,proto3" json:"fleets,omitempty"`
}

func (x *Fleets) Reset() {
	*x = Fleets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fleets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fleets) ProtoMessage() {}

func (x *Fleets) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fleets.ProtoReflect.Descriptor instead.
func (*Fleets) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{30}
}

func (x *Fleets) GetFleets() []*Fleet {
	if x != nil {
		return x.Fleets
	}
	return nil
}

type AddNewSrcsForFleetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // fleet id
	UserIds  []uint64 `protobuf:"varint,2,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
	GroupIds []uint64 `protobuf:"varint,3,rep,packed,name=groupIds,proto3" json:"groupIds,omitempty"`
}

func (x *AddNewSrcsForFleetRequest) Reset() {
	*x = AddNewSrcsForFleetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewSrcsForFleetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewSrcsForFleetRequest) ProtoMessage() {}

func (x *AddNewSrcsForFleetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewSrcsForFleetRequest.ProtoReflect.Descriptor instead.
func (*AddNewSrcsForFleetRequest) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{31}
}

func (x *AddNewSrcsForFleetRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddNewSrcsForFleetRequest) GetUserIds() []uint64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *AddNewSrcsForFleetRequest) GetGroupIds() []uint64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

type Fleet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc      string      `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Proto     string      `protobuf:"bytes,4,opt,name=proto,proto3" json:"proto,omitempty"`
	Port      string      `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
	Domain    string      `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain,omitempty"` // created by domain
	Age       string      `protobuf:"bytes,7,opt,name=age,proto3" json:"age,omitempty"`
	Resources []*Resource `protobuf:"bytes,8,rep,name=resources,proto3" json:"resources,omitempty"`
	Users     []*User     `protobuf:"bytes,9,rep,name=users,proto3" json:"users,omitempty"`
	Groups    []*Group    `protobuf:"bytes,10,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Fleet) Reset() {
	*x = Fleet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fleet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fleet) ProtoMessage() {}

func (x *Fleet) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fleet.ProtoReflect.Descriptor instead.
func (*Fleet) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{32}
}

func (x *Fleet) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Fleet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Fleet) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Fleet) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *Fleet) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Fleet) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Fleet) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *Fleet) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Fleet) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Fleet) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ip        string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Os        string   `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
	Status    bool     `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	LastSeen  string   `protobuf:"bytes,6,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"`   // only when status false
	CreatedBy string   `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"` // if made with token, managedBy is returned.
	Fleets    []*Fleet `protobuf:"bytes,8,rep,name=fleets,proto3" json:"fleets,omitempty"`
	Users     []*User  `protobuf:"bytes,9,rep,name=users,proto3" json:"users,omitempty"`
	Groups    []*Group `protobuf:"bytes,10,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{33}
}

func (x *Resource) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Resource) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Resource) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Resource) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

func (x *Resource) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Resource) GetFleets() []*Fleet {
	if x != nil {
		return x.Fleets
	}
	return nil
}

func (x *Resource) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Resource) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Users     []*User     `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	Fleets    []*Fleet    `protobuf:"bytes,4,rep,name=fleets,proto3" json:"fleets,omitempty"`
	Resources []*Resource `protobuf:"bytes,5,rep,name=resources,proto3" json:"resources,omitempty"`
	Age       string      `protobuf:"bytes,6,opt,name=age,proto3" json:"age,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{34}
}

func (x *Group) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Group) GetFleets() []*Fleet {
	if x != nil {
		return x.Fleets
	}
	return nil
}

func (x *Group) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Group) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Picture   string      `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty"`
	Email     string      `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Role      string      `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	Joined    string      `protobuf:"bytes,6,opt,name=joined,proto3" json:"joined,omitempty"`
	LastSeen  string      `protobuf:"bytes,7,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"` // only when status false
	Status    bool        `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Fleets    []*Fleet    `protobuf:"bytes,9,rep,name=fleets,proto3" json:"fleets,omitempty"`
	Resources []*Resource `protobuf:"bytes,10,rep,name=resources,proto3" json:"resources,omitempty"`
	Devices   []*Device   `protobuf:"bytes,11,rep,name=devices,proto3" json:"devices,omitempty"`
	Groups    []*Group    `protobuf:"bytes,12,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{35}
}

func (x *User) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *User) GetJoined() string {
	if x != nil {
		return x.Joined
	}
	return ""
}

func (x *User) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

func (x *User) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *User) GetFleets() []*Fleet {
	if x != nil {
		return x.Fleets
	}
	return nil
}

func (x *User) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *User) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *User) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email     string      `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Ip        string      `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Os        string      `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	Status    bool        `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	LastSeen  string      `protobuf:"bytes,7,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"` // only when status false
	CreatedBy string      `protobuf:"bytes,8,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	Version   string      `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	NodeKey   string      `protobuf:"bytes,10,opt,name=nodeKey,proto3" json:"nodeKey,omitempty"`
	CreatedAt string      `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	KeyExpiry string      `protobuf:"bytes,12,opt,name=keyExpiry,proto3" json:"keyExpiry,omitempty"`
	Fleets    []*Fleet    `protobuf:"bytes,13,rep,name=fleets,proto3" json:"fleets,omitempty"`
	Resources []*Resource `protobuf:"bytes,14,rep,name=resources,proto3" json:"resources,omitempty"`
	Groups    []*Group    `protobuf:"bytes,15,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runetale_runetale_v1_admin_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_runetale_runetale_v1_admin_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_runetale_runetale_v1_admin_proto_rawDescGZIP(), []int{36}
}

func (x *Device) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Device) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Device) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Device) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Device) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

func (x *Device) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Device) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Device) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *Device) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Device) GetKeyExpiry() string {
	if x != nil {
		return x.KeyExpiry
	}
	return ""
}

func (x *Device) GetFleets() []*Fleet {
	if x != nil {
		return x.Fleets
	}
	return nil
}

func (x *Device) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Device) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

var File_runetale_runetale_v1_admin_proto protoreflect.FileDescriptor

var file_runetale_runetale_v1_admin_proto_rawDesc = []byte{
	0x0a, 0x20, 0x72, 0x75, 0x6e, 0x65, 0x74, 0x61, 0x6c, 0x65, 0x2f, 0x72, 0x75, 0x6e, 0x65, 0x74,
	0x61, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x73, 0x72,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03,
	0x64, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x83, 0x01,
	0x0a, 0x0f, 0x50, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41,
	0x63, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x63, 0x6c, 0x73,
	0x22, 0x91, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x67, 0x65, 0x22, 0x75, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x20, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a,
	0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x68, 0x0a, 0x18, 0x41, 0x64,
	0x64, 0x4e, 0x65, 0x77, 0x44, 0x73, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x3c, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x22, 0x43, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x52, 0x0a, 0x11, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f,
	0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22,
	0x4f, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x68, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x44, 0x73, 0x74, 0x46, 0x6f, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x08, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x49, 0x64, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x33, 0x0a, 0x07, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x2c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x5c, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x2d, 0x0a,
	0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2a, 0x0a, 0x14,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x1c, 0x41,
	0x64, 0x64, 0x4e, 0x65, 0x77, 0x53, 0x72, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x73, 0x22, 0x3e, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x49, 0x64,
	0x73, 0x22, 0xb6, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x65, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x65, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x06, 0x46, 0x6c, 0x65, 0x65, 0x74,
	0x73, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x6c, 0x65, 0x65, 0x74,
	0x52, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x22, 0x61, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x4e,
	0x65, 0x77, 0x53, 0x72, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x22, 0x8e, 0x02, 0x0a, 0x05,
	0x46, 0x6c, 0x65, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x92, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x25, 0x0a, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x52, 0x06,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x22, 0xb8, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x6c, 0x65,
	0x65, 0x74, 0x52, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x65, 0x22, 0xe2, 0x02, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x52, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73,
	0x12, 0x2e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x22, 0xa2, 0x03, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65,
	0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b,
	0x65, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x52, 0x06, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12,
	0x2e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2a, 0x72, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f,
	0x43, 0x4b, 0x45, 0x52, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4c, 0x49, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x43,
	0x50, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x04, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x57, 0x53, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x7a, 0x75, 0x72,
	0x65, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e, 0x70, 0x72, 0x65, 0x6d, 0x10, 0x07, 0x12,
	0x09, 0x0a, 0x05, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x08, 0x32, 0xfc, 0x01, 0x0a, 0x0a, 0x41,
	0x63, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x63, 0x6c, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x12, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x63,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xaf, 0x01, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x00, 0x32, 0xa5, 0x01, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4f, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x44, 0x73, 0x74, 0x73, 0x46,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x44, 0x73, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x32, 0xf1, 0x01, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x00,
	0x12, 0x38, 0x0a, 0x0a, 0x50, 0x61, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x00,
	0x12, 0x35, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x00, 0x32, 0x65, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x44, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4e,
	0x65, 0x77, 0x44, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x82,
	0x01, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x22, 0x00, 0x32, 0xf3, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x00, 0x32, 0xb1, 0x01, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x53, 0x72, 0x63,
	0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x53, 0x72, 0x63, 0x73,
	0x46, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0xf1, 0x01,
	0x0a, 0x0c, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a,
	0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x12, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x6c, 0x65,
	0x65, 0x74, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x65, 0x65, 0x74,
	0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x22,
	0x00, 0x32, 0x67, 0x0a, 0x12, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4e, 0x65,
	0x77, 0x53, 0x72, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x12, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x53, 0x72, 0x63,
	0x73, 0x46, 0x6f, 0x72, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_runetale_runetale_v1_admin_proto_rawDescOnce sync.Once
	file_runetale_runetale_v1_admin_proto_rawDescData = file_runetale_runetale_v1_admin_proto_rawDesc
)

func file_runetale_runetale_v1_admin_proto_rawDescGZIP() []byte {
	file_runetale_runetale_v1_admin_proto_rawDescOnce.Do(func() {
		file_runetale_runetale_v1_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_runetale_runetale_v1_admin_proto_rawDescData)
	})
	return file_runetale_runetale_v1_admin_proto_rawDescData
}

var file_runetale_runetale_v1_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_runetale_runetale_v1_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_runetale_runetale_v1_admin_proto_goTypes = []interface{}{
	(DeploymentMethod)(0),                // 0: protos.DeploymentMethod
	(*CreateAclRequest)(nil),             // 1: protos.CreateAclRequest
	(*PatchAclRequest)(nil),              // 2: protos.PatchAclRequest
	(*GetAclRequest)(nil),                // 3: protos.GetAclRequest
	(*GetAclsResponse)(nil),              // 4: protos.GetAclsResponse
	(*AclResponse)(nil),                  // 5: protos.AclResponse
	(*GetMeResponse)(nil),                // 6: protos.GetMeResponse
	(*GetUserRequest)(nil),               // 7: protos.GetUserRequest
	(*Users)(nil),                        // 8: protos.Users
	(*AddNewDstsForUserRequest)(nil),     // 9: protos.AddNewDstsForUserRequest
	(*AddGroupsRequest)(nil),             // 10: protos.AddGroupsRequest
	(*CreateGroupRequest)(nil),           // 11: protos.CreateGroupRequest
	(*PatchGroupRequest)(nil),            // 12: protos.PatchGroupRequest
	(*GetGroupRequest)(nil),              // 13: protos.GetGroupRequest
	(*Groups)(nil),                       // 14: protos.Groups
	(*UserWithPicture)(nil),              // 15: protos.UserWithPicture
	(*AddNewDstForGroupRequest)(nil),     // 16: protos.AddNewDstForGroupRequest
	(*GetDevicesRequest)(nil),            // 17: protos.GetDevicesRequest
	(*Devices)(nil),                      // 18: protos.Devices
	(*CreateResourceRequest)(nil),        // 19: protos.CreateResourceRequest
	(*CreateResourceResponse)(nil),       // 20: protos.CreateResourceResponse
	(*GenerateTokenRequest)(nil),         // 21: protos.GenerateTokenRequest
	(*GenerateTokenResponse)(nil),        // 22: protos.GenerateTokenResponse
	(*PatchResourceRequest)(nil),         // 23: protos.PatchResourceRequest
	(*GetResourceRequest)(nil),           // 24: protos.GetResourceRequest
	(*Resources)(nil),                    // 25: protos.Resources
	(*AddNewSrcsForResourceRequest)(nil), // 26: protos.AddNewSrcsForResourceRequest
	(*AddFleetsRequest)(nil),             // 27: protos.AddFleetsRequest
	(*CreateFleetRequest)(nil),           // 28: protos.CreateFleetRequest
	(*PatchFleetRequest)(nil),            // 29: protos.PatchFleetRequest
	(*GetFleetRequest)(nil),              // 30: protos.GetFleetRequest
	(*Fleets)(nil),                       // 31: protos.Fleets
	(*AddNewSrcsForFleetRequest)(nil),    // 32: protos.AddNewSrcsForFleetRequest
	(*Fleet)(nil),                        // 33: protos.Fleet
	(*Resource)(nil),                     // 34: protos.Resource
	(*Group)(nil),                        // 35: protos.Group
	(*User)(nil),                         // 36: protos.User
	(*Device)(nil),                       // 37: protos.Device
	(*emptypb.Empty)(nil),                // 38: google.protobuf.Empty
}
var file_runetale_runetale_v1_admin_proto_depIdxs = []int32{
	5,  // 0: protos.GetAclsResponse.acls:type_name -> protos.AclResponse
	36, // 1: protos.Users.users:type_name -> protos.User
	35, // 2: protos.Groups.groups:type_name -> protos.Group
	37, // 3: protos.Devices.devices:type_name -> protos.Device
	0,  // 4: protos.GenerateTokenRequest.deploymentMethod:type_name -> protos.DeploymentMethod
	34, // 5: protos.Resources.resources:type_name -> protos.Resource
	0,  // 6: protos.CreateFleetRequest.type:type_name -> protos.DeploymentMethod
	33, // 7: protos.Fleets.fleets:type_name -> protos.Fleet
	34, // 8: protos.Fleet.resources:type_name -> protos.Resource
	36, // 9: protos.Fleet.users:type_name -> protos.User
	35, // 10: protos.Fleet.groups:type_name -> protos.Group
	33, // 11: protos.Resource.fleets:type_name -> protos.Fleet
	36, // 12: protos.Resource.users:type_name -> protos.User
	35, // 13: protos.Resource.groups:type_name -> protos.Group
	36, // 14: protos.Group.users:type_name -> protos.User
	33, // 15: protos.Group.fleets:type_name -> protos.Fleet
	34, // 16: protos.Group.resources:type_name -> protos.Resource
	33, // 17: protos.User.fleets:type_name -> protos.Fleet
	34, // 18: protos.User.resources:type_name -> protos.Resource
	37, // 19: protos.User.devices:type_name -> protos.Device
	35, // 20: protos.User.groups:type_name -> protos.Group
	33, // 21: protos.Device.fleets:type_name -> protos.Fleet
	34, // 22: protos.Device.resources:type_name -> protos.Resource
	35, // 23: protos.Device.groups:type_name -> protos.Group
	1,  // 24: protos.AclService.CreateAcl:input_type -> protos.CreateAclRequest
	2,  // 25: protos.AclService.PatchAcl:input_type -> protos.PatchAclRequest
	3,  // 26: protos.AclService.GetAcl:input_type -> protos.GetAclRequest
	38, // 27: protos.AclService.GetAcls:input_type -> google.protobuf.Empty
	38, // 28: protos.UserService.GetMe:input_type -> google.protobuf.Empty
	7,  // 29: protos.UserService.GetUser:input_type -> protos.GetUserRequest
	38, // 30: protos.UserService.GetUsers:input_type -> google.protobuf.Empty
	9,  // 31: protos.UserDetailService.AddNewDstsForUser:input_type -> protos.AddNewDstsForUserRequest
	10, // 32: protos.UserDetailService.AddGroups:input_type -> protos.AddGroupsRequest
	11, // 33: protos.GroupService.CreateGroup:input_type -> protos.CreateGroupRequest
	12, // 34: protos.GroupService.PatchGroup:input_type -> protos.PatchGroupRequest
	13, // 35: protos.GroupService.GetGroup:input_type -> protos.GetGroupRequest
	38, // 36: protos.GroupService.GetGroups:input_type -> google.protobuf.Empty
	16, // 37: protos.GroupDetailService.AddNewDstForGroup:input_type -> protos.AddNewDstForGroupRequest
	17, // 38: protos.DeviceService.GetDevice:input_type -> protos.GetDevicesRequest
	38, // 39: protos.DeviceService.GetDevices:input_type -> google.protobuf.Empty
	19, // 40: protos.ResourceService.CreateResource:input_type -> protos.CreateResourceRequest
	21, // 41: protos.ResourceService.GenerateToken:input_type -> protos.GenerateTokenRequest
	23, // 42: protos.ResourceService.PatchResource:input_type -> protos.PatchResourceRequest
	24, // 43: protos.ResourceService.GetResource:input_type -> protos.GetResourceRequest
	38, // 44: protos.ResourceService.GetResources:input_type -> google.protobuf.Empty
	26, // 45: protos.ResourceDetailService.AddNewSrcsForResource:input_type -> protos.AddNewSrcsForResourceRequest
	27, // 46: protos.ResourceDetailService.AddFleets:input_type -> protos.AddFleetsRequest
	28, // 47: protos.FleetService.CreateFleet:input_type -> protos.CreateFleetRequest
	29, // 48: protos.FleetService.PatchFleet:input_type -> protos.PatchFleetRequest
	30, // 49: protos.FleetService.GetFleet:input_type -> protos.GetFleetRequest
	38, // 50: protos.FleetService.GetFleets:input_type -> google.protobuf.Empty
	32, // 51: protos.FleetDetailService.AddNewSrcsForFleet:input_type -> protos.AddNewSrcsForFleetRequest
	5,  // 52: protos.AclService.CreateAcl:output_type -> protos.AclResponse
	5,  // 53: protos.AclService.PatchAcl:output_type -> protos.AclResponse
	5,  // 54: protos.AclService.GetAcl:output_type -> protos.AclResponse
	4,  // 55: protos.AclService.GetAcls:output_type -> protos.GetAclsResponse
	6,  // 56: protos.UserService.GetMe:output_type -> protos.GetMeResponse
	36, // 57: protos.UserService.GetUser:output_type -> protos.User
	8,  // 58: protos.UserService.GetUsers:output_type -> protos.Users
	38, // 59: protos.UserDetailService.AddNewDstsForUser:output_type -> google.protobuf.Empty
	38, // 60: protos.UserDetailService.AddGroups:output_type -> google.protobuf.Empty
	35, // 61: protos.GroupService.CreateGroup:output_type -> protos.Group
	35, // 62: protos.GroupService.PatchGroup:output_type -> protos.Group
	35, // 63: protos.GroupService.GetGroup:output_type -> protos.Group
	14, // 64: protos.GroupService.GetGroups:output_type -> protos.Groups
	38, // 65: protos.GroupDetailService.AddNewDstForGroup:output_type -> google.protobuf.Empty
	37, // 66: protos.DeviceService.GetDevice:output_type -> protos.Device
	18, // 67: protos.DeviceService.GetDevices:output_type -> protos.Devices
	20, // 68: protos.ResourceService.CreateResource:output_type -> protos.CreateResourceResponse
	22, // 69: protos.ResourceService.GenerateToken:output_type -> protos.GenerateTokenResponse
	34, // 70: protos.ResourceService.PatchResource:output_type -> protos.Resource
	34, // 71: protos.ResourceService.GetResource:output_type -> protos.Resource
	25, // 72: protos.ResourceService.GetResources:output_type -> protos.Resources
	38, // 73: protos.ResourceDetailService.AddNewSrcsForResource:output_type -> google.protobuf.Empty
	38, // 74: protos.ResourceDetailService.AddFleets:output_type -> google.protobuf.Empty
	33, // 75: protos.FleetService.CreateFleet:output_type -> protos.Fleet
	33, // 76: protos.FleetService.PatchFleet:output_type -> protos.Fleet
	33, // 77: protos.FleetService.GetFleet:output_type -> protos.Fleet
	31, // 78: protos.FleetService.GetFleets:output_type -> protos.Fleets
	38, // 79: protos.FleetDetailService.AddNewSrcsForFleet:output_type -> google.protobuf.Empty
	52, // [52:80] is the sub-list for method output_type
	24, // [24:52] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_runetale_runetale_v1_admin_proto_init() }
func file_runetale_runetale_v1_admin_proto_init() {
	if File_runetale_runetale_v1_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_runetale_runetale_v1_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAclsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AclResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewDstsForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Groups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWithPicture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewDstForGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewSrcsForResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFleetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFleetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchFleetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFleetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fleets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewSrcsForFleetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fleet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runetale_runetale_v1_admin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_runetale_runetale_v1_admin_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   10,
		},
		GoTypes:           file_runetale_runetale_v1_admin_proto_goTypes,
		DependencyIndexes: file_runetale_runetale_v1_admin_proto_depIdxs,
		EnumInfos:         file_runetale_runetale_v1_admin_proto_enumTypes,
		MessageInfos:      file_runetale_runetale_v1_admin_proto_msgTypes,
	}.Build()
	File_runetale_runetale_v1_admin_proto = out.File
	file_runetale_runetale_v1_admin_proto_rawDesc = nil
	file_runetale_runetale_v1_admin_proto_goTypes = nil
	file_runetale_runetale_v1_admin_proto_depIdxs = nil
}
